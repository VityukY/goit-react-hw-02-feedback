{"version":3,"sources":["components/feedback/styles.module.css","components/feedback/Section.js","components/feedback/ControlsFeedback.js","components/feedback/Statistics.js","components/feedback/Notification.js","App.jsx","index.js"],"names":["module","exports","Section","children","ControlsFeedback","options","incrementCounter","values","Object","keys","className","styles","buttonList","map","value","type","onClick","Statistics","optins","statList","Notification","message","notification","App","state","good","neutral","bad","id","setState","prevState","counterTotalFeedback","countPositiveFeedbackPercentage","toFixed","title","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,6BAA6B,MAAQ,wB,2ICE/FC,EAHC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,kCAAUA,K,gBCiBLC,EAhBU,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAC5BC,EAASC,OAAOC,KAAKJ,GAE3B,OACG,oBAAIK,UAAWC,IAAOC,WAAtB,SACIL,EAAOM,KAAI,SAAAC,GAAK,OACd,6BACG,wBAAQC,KAAK,SAASC,QAAS,kBAAMV,EAAiB,CAACQ,KAAvD,SACI,CAACA,MAFC,CAACA,UCSPG,EAfI,SAAC,GAA0B,IAAxBd,EAAuB,EAAvBA,SAAUe,EAAa,EAAbA,OACvBX,EAASC,OAAOC,KAAKS,GAE3B,OACG,qBAAIR,UAAWC,IAAOQ,SAAtB,UACIZ,EAAOM,KAAI,SAAAC,GAAK,OACd,+BACI,CAACA,GADL,IACcI,EAAOJ,KADZ,CAACA,OAIZX,MCPKiB,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OAAO,qBAAIX,UAAWC,IAAOW,aAAtB,cAAsCD,EAAtC,QC8DKE,G,iNAxDZC,MAAQ,CACLC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGRrB,iBAAmB,SAAAsB,GAChB,EAAKC,UAAS,SAAAC,GACX,OAAO,eACHF,EAAKE,EAAUF,GAAM,O,EAK/BG,qBAAuB,WACpB,OAAO,EAAKP,MAAMC,KAAO,EAAKD,MAAME,QAAU,EAAKF,MAAMG,K,EAE5DK,gCAAkC,WAI/B,OAHa,EAAKR,MAAMC,KACV,EAAKM,uBACiB,KAClBE,QAAQ,I,4CAG7B,WACG,OACG,gCACG,eAAC,EAAD,WACG,oBAAIvB,UAAWC,IAAOuB,MAAtB,mCACA,cAAC,EAAD,CACG7B,QAAS8B,KAAKX,MACdlB,iBAAkB6B,KAAK7B,sBAG7B,eAAC,EAAD,WACG,oBAAII,UAAWC,IAAOuB,MAAtB,wBACiC,IAAhCC,KAAKJ,uBACH,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,eAAC,EAAD,CAAYH,OAAQiB,KAAKX,MAAzB,UACG,yCAAYW,KAAKJ,0BACjB,mDACsB,IACyB,QAA3CI,KAAKH,kCACD,IACAG,KAAKH,kCAJb,oB,GA1CHI,c,MCFlBC,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.d404d8e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"styles_buttonList__fL4Y7\",\"notification\":\"styles_notification__1R3Re\",\"title\":\"styles_title__Nq5Ig\"};","const Section = ({ children }) => {\r\n   return <section>{children}</section>;\r\n};\r\nexport default Section;\r\n","import styles from './styles.module.css';\r\n\r\nconst ControlsFeedback = ({ options, incrementCounter }) => {\r\n   const values = Object.keys(options);\r\n\r\n   return (\r\n      <ul className={styles.buttonList}>\r\n         {values.map(value => (\r\n            <li key={[value]}>\r\n               <button type=\"button\" onClick={() => incrementCounter([value])}>\r\n                  {[value]}\r\n               </button>\r\n            </li>\r\n         ))}\r\n      </ul>\r\n   );\r\n};\r\n\r\nexport default ControlsFeedback;\r\n","import styles from './styles.module.css';\r\n\r\nconst Statistics = ({ children, optins }) => {\r\n   const values = Object.keys(optins);\r\n\r\n   return (\r\n      <ul className={styles.statList}>\r\n         {values.map(value => (\r\n            <li key={[value]}>\r\n               {[value]}:{optins[value]}\r\n            </li>\r\n         ))}\r\n         {children}\r\n      </ul>\r\n   );\r\n};\r\n\r\nexport default Statistics;\r\n","import styles from './styles.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n   return <h2 className={styles.notification}> {message} </h2>;\r\n};\r\nexport default Notification;\r\n","import { Component } from 'react';\nimport Section from './components/feedback/Section';\nimport ControlsFeedback from './components/feedback/ControlsFeedback';\nimport Statistics from './components/feedback/Statistics';\nimport Notification from './components/feedback/Notification';\nimport styles from './components/feedback/styles.module.css';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n   state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n   };\n\n   incrementCounter = id => {\n      this.setState(prevState => {\n         return {\n            [id]: prevState[id] + 1,\n         };\n      });\n   };\n\n   counterTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n   };\n   countPositiveFeedbackPercentage = () => {\n      const good = this.state.good;\n      const total = this.counterTotalFeedback();\n      const percentage = (good / total) * 100;\n      return percentage.toFixed(2);\n   };\n\n   render() {\n      return (\n         <div>\n            <Section>\n               <h1 className={styles.title}>Please leave feedback</h1>\n               <ControlsFeedback\n                  options={this.state}\n                  incrementCounter={this.incrementCounter}\n               />\n            </Section>\n            <Section>\n               <h2 className={styles.title}>Statistics</h2>\n               {this.counterTotalFeedback() === 0 ? (\n                  <Notification message=\"No feedback given\" />\n               ) : (\n                  <Statistics optins={this.state}>\n                     <p> Total: {this.counterTotalFeedback()}</p>\n                     <p>\n                        Positive feedback:{' '}\n                        {this.countPositiveFeedbackPercentage() === 'NaN'\n                           ? '0'\n                           : this.countPositiveFeedbackPercentage()}\n                        %\n                     </p>\n                  </Statistics>\n               )}\n            </Section>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../src/styles.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}